apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets | quote }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          env:
            - name: RACK_ENV
              value: {{ .Values.app.env | quote }}
            - name: RAILS_ENV
              value: {{ .Values.app.railsEnv | quote }}
            - name: RAILS_LOG_TO_STDOUT
              value: {{ .Values.app.railsLogToStdOut | quote }}
            - name: PORT
              value: {{ .Values.service.externalPort | quote }}
            - name: FINGERPRINT_VERSION
              value: {{ .Values.app.fingerprintVersion | quote }}
{{- if .Values.app.disableSchemaRegistration }}
            - name: DISABLE_SCHEMA_REGISTRATION
              value: {{ .Values.app.disableSchemaRegistration | quote }}
{{- end }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{  .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{  .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
{{- end }}
