apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.app.vaultRole }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecrets | quote }}
      containers:
{{- if .Values.envoy.enabled }}
        - name: envoy
          ports:
            - name: {{ .Values.envoy.name }}
              containerPort: {{ .Values.envoy.internalProxyPort }}
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: {{ .Values.service.name }}-{{ .Values.envoy.name }}
              mountPath: /{{ .Values.service.name }}-{{ .Values.envoy.name }}
          image: "{{ .Values.envoy.image.repo }}:{{ .Values.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.envoy.image.pullPolicy | quote }}
          command:
            - /usr/local/bin/envoy
          args:
            - -c
            - /{{ .Values.service.name }}-{{ .Values.envoy.name }}/envoy.yaml
            - --log-path
            - /dev/stdout
            - --log-level
            - "debug"
{{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          env:
            - name: RACK_ENV
              value: {{ .Values.app.railsEnv | quote }}
            - name: RAILS_ENV
              value: {{ .Values.app.railsEnv | quote }}
            - name: RAILS_LOG_TO_STDOUT
              value: {{ .Values.app.railsLogToStdOut | quote }}
            - name: PORT
              value: {{ .Values.service.externalPort | quote }}
{{- if .Values.app.secretName }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.secretName | quote }}
                  key:  dbURL
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.app.secretName | quote }}
                  key: secretKeyBase
{{- else }}
            - name: DATABASE_URL
              value: {{ .Values.app.dbURL | quote }}
            - name: SECRET_KEY_BASE
              value: {{ .Values.app.secretKeyBase | quote }}
{{- end }}
            - name: DB_POOL
              value: {{ .Values.app.dbPool | quote }}
            - name: WEB_WORKER_PROCESSES
              value: {{ .Values.app.webWorkerProcesses | quote }}
            - name: MAX_WEB_THREADS
              value: {{ .Values.app.maxWebThreads | quote }}
            - name: RAILS_SERVE_STATIC_FILES
              value: {{ .Values.app.railsServeStaticFiles | quote }}
            - name: ALLOW_RESPONSE_CACHING
              value: {{ .Values.app.allowResponseCaching | quote }}
            - name: FORCE_SSL
              value: {{ .Values.app.forceSSL | quote }}
            - name: DEFAULT_COMPATIBILITY
              value: {{ .Values.app.defaultCompatibility | quote }}
            - name: DISABLE_PASSWORD
              value: {{ .Values.app.disablePWD | quote }}
{{- if .Values.app.rollbarAccessToken }}
            - name: ROLLBAR_ACCESS_TOKEN
              value: {{ .Values.app.rollbarAccessToken | quote }}
{{- end }}
            - name: DD_TRACE_ANALYTICS_ENABLED
              value: {{ .Values.app.ddTraceAnalyticsEnabled | quote }}
{{- if .Values.app.ddTraceAnalyticsEnabled }}
            - name: DATADOG_APM_SERVICE_NAME
              value: {{ .Values.app.ddAPMServiceName | quote }}
            - name: DD_ENV
              value: {{ .Values.app.env | quote }}
{{- end }}
{{- if .Values.app.statsdHost }}
            - name: STATSD_HOST
              value: {{ .Values.app.statsdHost | quote }}
            - name: STATSD_PORT
              value: {{ .Values.app.statsdPort | quote }}
{{- end }}
            - name: VAULT_ADDR
              value: {{ .Values.app.vaultAddr | quote }}
            - name: VAULT_PATH_PREFIX
              value: {{ .Values.app.vaultPathPrefix | quote }}
{{- if .Values.app.vaultRole }}
            - name: VAULT_ROLE
              value: {{ .Values.app.vaultRole | quote }}
{{- end }}
{{- if .Values.app.vaultToken }}
            - name: VAULT_TOKEN
              value: {{ .Values.app.vaultToken | quote }}
{{- end }}
{{- if .Values.app.vaultK8sAuthUrlPrefix }}
            - name: VAULT_K8S_AUTH_URL_PREFIX
              value: {{ .Values.app.vaultK8sAuthUrlPrefix | quote }}
{{- end }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{  .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{  .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 8 }}
{{- end }}
{{- if .Values.envoy.enabled }}
      volumes:
        - name: {{ .Values.service.name }}-{{ .Values.envoy.name }}
          configMap:
            name: {{ .Values.service.name }}-{{ .Values.envoy.name }}
            items:
              - key: envoy.yaml
                path: envoy.yaml
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
{{- end }}
