# Default values for avro-schema-registry.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/dollarshaveclub/avro-schema-registry
  tag: master
  pullPolicy: Always
  pullSecrets: image-pull-secret

nameOverride: ""
fullnameOverride: ""

service:
  name: avro-schema-registry
  type: ClusterIP
  externalPort: 8081
  internalPort: 8081

ingress:
  enabled: false
  hosts:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: schemaregistry.example.local
      paths: []

dnsPolicy: ClusterFirst
dnsConfig: {}
#  options:
#    - name: ndots
#      value: '2'
#    - name: attempts
#      value: '5'
#    - name: timeout
#      value: '1'

app:
  env: development
  railsEnv: production # use production for all environments
  statsdHost: datadog.tools.svc.cluster.local.
  statsdPort: 8125
  railsLogToStdOut: true
  dbURL: postgresql://root:root@postgres:5432/avro-schema-registry_development
  dbPool: 25
  forceSSL: false
  secretKeyBase: ac4e76bc1a5fdd3ab0d19dd205029da31adebed83df2fc01
  disablePWD: true
  railsServeStaticFiles: true
  allowResponseCaching: true
  defaultCompatibility: BACKWARD
  webWorkerProcesses: 4
  maxWebThreads: 25
  vaultAddr: http://vault:8200
  vaultRole: ''
  vaultK8sAuthUrlPrefix: kubernetes
  vaultTokenPath: /var/run/secrets/kubernetes.io/serviceaccount/token
  vaultPathPrefix: secret/services/avro-schema-registry/
  rollbarAccessToken: ''
  ddAPMServiceName: avro-schema-registry
  ddTraceAnalyticsEnabled: false

livenessProbe:
  initialDelaySeconds: 300
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
  httpGet:
    path: '/' #TBD

readinessProbe:
  initialDelaySeconds: 20
  timeoutSeconds: 5
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 3
  httpGet:
    path: '/' #TBD

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
