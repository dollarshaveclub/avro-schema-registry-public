apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.app.role }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          command: ["rails", "server", "-b", "0.0.0.0", "-p", "3000"]
          ports:
            - containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
          env:
            - name: RACK_ENV
              value: {{ .Values.app.railsEnv | quote }}
            - name: RAILS_ENV
              value: {{ .Values.app.railsEnv | quote }}
            - name: RAILS_LOG_TO_STDOUT
              value: {{ .Values.app.railsLogToStdOut | quote }}
            - name: PORT
              value: {{ .Values.service.externalPort | quote }}
            - name: DB_POOL
              value: {{ .Values.app.dbPool | quote }}
            - name: WEB_WORKER_PROCESSES
              value: {{ .Values.app.webWorkerProcesses | quote }}
            - name: MAX_WEB_THREADS
              value: {{ .Values.app.maxWebThreads | quote }}
            - name: RAILS_SERVE_STATIC_FILES
              value: {{ .Values.app.railsServeStaticFiles | quote }}
            - name: ALLOW_RESPONSE_CACHING
              value: {{ .Values.app.allowResponseCaching | quote }}
            - name: FORCE_SSL
              value: {{ .Values.app.forceSSL | quote }}
            - name: DEFAULT_COMPATIBILITY
              value: {{ .Values.app.defaultCompatibility | quote }}
            - name: DISABLE_PASSWORD
              value: {{ .Values.app.disablePWD | quote }}
            - name: DD_TRACE_ENABLED
              value: {{ .Values.app.ddTraceEnabled | quote }}
            - name: DD_TRACE_ANALYTICS_ENABLED
              value: {{ .Values.app.ddTraceAnalyticsEnabled | quote }}
            - name: DATADOG_APM_SERVICE_NAME
              value: {{ .Values.app.ddAPMServiceName | quote }}
            - name: DATADOG_TRACER_HOSTNAME
              value: {{ .Values.app.ddTracerHostname | quote }}
            - name: DATADOG_TRACER_PORT
              value: {{ .Values.app.ddTracerPort | quote }}
            - name: DD_ENV
              value: {{ .Values.app.env | quote }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: db_url
            - name: STATSD_HOST
              value: {{ .Values.app.statsdHost | quote }}
            - name: STATSD_PORT
              value: {{ .Values.app.statsdPort | quote }}
            - name: AVRO_SCHEMA_REGISTRY_URL
              value: {{ .Values.app.avroSchemaRegistryUrl | quote }}
            - name: CANONICAL_SHIPMENTS_TOPIC
              value: {{ .Values.app.canonicalShipmentsTopic | quote }}
            - name: KAFKA_CLUSTER_SRV_HOSTNAME
              value: {{ .Values.app.kafkaClusterSrvHostname | quote }}
            - name: LOG_LEVEL
              value: {{ .Values.app.logLevel | quote }}
            - name: STATS_ENV
              value: {{ .Values.app.env | quote }}
            - name: REDIS_URL
              value: {{ .Values.app.redisURL | quote }}
            - name: SIDEKIQ_REDIS_URL
              value: {{ .Values.app.sidekiqRedisURL | quote }}
            - name: DATABASE_CONCURRENCY
              value: {{ .Values.app.databaseConcurrency | quote }}
            - name: TOOLBELT_PUBLIC_KEY_URI
              value: {{ .Values.app.toolbeltPublicKeyURI | quote }}
            - name: MYSQL_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: db_name
            - name: MYSQL_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: db_hostname
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: db_password
            - name: MYSQL_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: db_port
            - name: MYSQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: db_username
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
                  key: secret_key_base

          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{  .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{  .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.service.internalPort }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
{{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
{{- end }}

