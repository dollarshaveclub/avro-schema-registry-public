apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ printf "ss.%s-aws-sm-ss" (include "fullname" .) }}
  annotations:
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook-weight: "-2"
spec:
  provider:
    aws:  # set secretStore provider to AWS.
      service: SecretsManager # Configure service to be Secrets Manager
      region: us-west-2   # Region where the secret is.
      auth:
        secretRef:
          accessKeyIDSecretRef:
            name: aws-secret # References the secret we created
            key: access-key
          secretAccessKeySecretRef:
            name: aws-secret
            key: secret

---

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ printf "es.%s-aws-sm-es" (include "fullname" .) }}
  annotations:
    helm.sh/hook: "pre-install, pre-upgrade"
    helm.sh/hook-delete-policy: "before-hook-creation"
    helm.sh/hook-weight: "-1"
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: {{ printf "ss.%s-aws-sm-ss" (include "fullname" .) }}
    kind: SecretStore
  target:
    name: {{ printf "es.%s-aws-sm-ss" (include "fullname" .) }}
  data:
<<<<<<< Updated upstream
    - secretKey: db_url
      remoteRef:
        key: avro-schema-registry/{{ .Values.app.secretsEnv }}
        property: /db/url
    - secretKey: secret_key_base
      remoteRef:
        key: avro-schema-registry/{{ .Values.app.secretsEnv }}
        property: /secretkeybase
=======
    - secretKey: db_name
      remoteRef:
        key: arm-monolith/{{ .Values.app.secretsEnv }}
        property: /0/mysql/db_name
    - secretKey: db_hostname
      remoteRef:
        key: arm-monolith/{{ .Values.app.secretsEnv }}
        property: /0/mysql/hostname
    - secretKey: db_password
      remoteRef:
        key: arm-monolith/{{ .Values.app.secretsEnv }}
        property: /0/mysql/password
    - secretKey: db_port
      remoteRef:
        key: arm-monolith/{{ .Values.app.secretsEnv }}
        property: /0/mysql/port
    - secretKey: db_username
      remoteRef:
        key: arm-monolith/{{ .Values.app.secretsEnv }}
        property: /0/mysql/username
    - secretKey: secret_key_base
      remoteRef:
        key: arm-monolith/{{ .Values.app.secretsEnv }}
        property: /0/secret_key_base
>>>>>>> Stashed changes
